spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/nature_photography
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: false  # Disable Flyway for now since we're using hibernate.ddl-auto: update
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      location: ${java.io.tmpdir}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

app:
  upload:
    dir: ${USER_HOME}/photo-uploads
  base-url: http://localhost:8080
  jwt:
    secret: ${JWT_SECRET_KEY:your_default_jwt_secret_key_here}
    expiration: 86400000 # 24 hours in milliseconds

logging:
  level:
    com.photowebsite: DEBUG
    org.springframework: INFO

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  packages-to-scan: com.photowebsite.controller

server:
  ssl:
    enabled: false
    key-store: classpath:keystore.p12
    key-store-password: ${SSL_KEY_STORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: photowebsite
  http2:
    enabled: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
    min-response-size: 1024

security:
  jwt:
    token:
      secret-key: ${JWT_SECRET_KEY}
      expire-length: 3600000
  password:
    encoder:
      secret: ${PASSWORD_ENCODER_SECRET}
      iteration: 33
      keylength: 256

# Rate limiting
bucket4j:
  enabled: true
  filters:
    - cache-name: buckets
      url: /api.*
      rate-limits:
        - bandwidths:
            - capacity: 20
              time: 1
              unit: minutes